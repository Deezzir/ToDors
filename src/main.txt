mod todo;

use todo::*;
use std::vec;
use ncurses::*;
use std::cmp::*;

fn main() {
    initscr();
    init_style();

    let mut quit: bool = false;
    let mut cur_todo: usize = 0;
    let mut todos: Vec<&str> = vec![
        "Finish Scancore",
        "Make a cup of tea",
        "Write a Rust TODO app"
    ];

    while !quit {
        for (row, todo) in todos.iter().enumerate() {
            let pair = {
                if row == cur_todo {
                    HIGHLIGHT_PAIR
                } else {
                    REGULAR_PAIR
                }
            };

            attron(COLOR_PAIR(pair));
            mv(row as i32, 1);
            addstr(*todo);
            attroff(COLOR_PAIR(pair));
        }

        refresh();
        
        let key: i32 = getch();
        match key as u8 as char {
            'q'|'Q'| => quit = true,
            'w'|'W' => if cur_todo > 0 {
                cur_todo -= 1;
            },
            's'|'S' => cur_todo = min(cur_todo + 1, todos.len()),
            _ => {}
        }
    }
    endwin();
}
